diff --git a/hardware/arduino/cores/arduino/HID.cpp b/hardware/arduino/cores/arduino/HID.cpp
index ac63608..df76dea 100644
--- a/hardware/arduino/cores/arduino/HID.cpp
+++ b/hardware/arduino/cores/arduino/HID.cpp
@@ -93,9 +93,20 @@ const u8 _hidReportDescriptor[] = {
     0x81, 0x02,                    //   INPUT (Data,Var,Abs)
     0x95, 0x01,                    //   REPORT_COUNT (1)
     0x75, 0x08,                    //   REPORT_SIZE (8)
+
     0x81, 0x03,                    //   INPUT (Cnst,Var,Abs)
     
-	0x95, 0x06,                    //   REPORT_COUNT (6)
+    0x95, 0x05,                    //   REPORT_COUNT (5)
+    0x75, 0x01,                    //   REPORT_SIZE (1)
+    0x05, 0x08,                    //   USAGE_PAGE (LEDs)
+    0x19, 0x01,                    //   USAGE_MINIMUM (1)
+    0x29, 0x05,                    //   USAGE_MAXIMUM (5)
+    0x91, 0x02,                    //   OUTPUT (Data,Var,Abs) // LED report
+    0x95, 0x01,                    //   REPORT_COUNT (1)
+    0x75, 0x03,                    //   REPORT_SIZE (3)
+    0x91, 0x01,                    //   OUTPUT (Constant) // padding 
+
+       0x95, 0x06,                    //   REPORT_COUNT (6)
     0x75, 0x08,                    //   REPORT_SIZE (8)
     0x15, 0x00,                    //   LOGICAL_MINIMUM (0)
     0x25, 0x65,                    //   LOGICAL_MAXIMUM (101)
@@ -193,6 +204,18 @@ bool WEAK HID_Setup(Setup& setup)
 			_hid_idle = setup.wValueL;
 			return true;
 		}
+
+		if (HID_SET_REPORT == r)
+		{
+			if (setup.wLength == 2) 
+			{
+				uint8_t data[2];
+				if (2 == USB_RecvControl(data, 2)) 
+				{
+					Keyboard.setLedStatus(data[1]);
+				}
+			}
+		}
 	}
 	return false;
 }
@@ -515,6 +538,16 @@ size_t Keyboard_::write(uint8_t c)
 	return (p);					// just return the result of press() since release() almost always returns 1
 }
 
+void Keyboard_::setLedStatus(uint8_t s)
+{
+	_ledStatus = s;
+}
+
+uint8_t Keyboard_::getLedStatus(void)
+{
+	return _ledStatus;
+}
+
 #endif
 
-#endif /* if defined(USBCON) */
\ No newline at end of file
+#endif /* if defined(USBCON) */
diff --git a/hardware/arduino/cores/arduino/USBAPI.h b/hardware/arduino/cores/arduino/USBAPI.h
index 7a14285..d750971 100644
--- a/hardware/arduino/cores/arduino/USBAPI.h
+++ b/hardware/arduino/cores/arduino/USBAPI.h
@@ -112,6 +112,13 @@ extern Mouse_ Mouse;
 #define KEY_F11				0xCC
 #define KEY_F12				0xCD
 
+#define KEY_NUM_LOCK			0xDB
+#define KEY_SCROLL_LOCK			0xCF
+
+#define LED_NUM_LOCK			0x01
+#define LED_CAPS_LOCK			0x02
+#define LED_SCROLL_LOCK			0x04
+
 //	Low level key report: up to 6 keys and shift, ctrl etc at once
 typedef struct
 {
@@ -125,6 +132,7 @@ class Keyboard_ : public Print
 private:
 	KeyReport _keyReport;
 	void sendReport(KeyReport* keys);
+	uint8_t _ledStatus;
 public:
 	Keyboard_(void);
 	void begin(void);
@@ -133,6 +141,8 @@ public:
 	virtual size_t press(uint8_t k);
 	virtual size_t release(uint8_t k);
 	virtual void releaseAll(void);
+	virtual void setLedStatus(uint8_t);
+	virtual uint8_t getLedStatus(void);
 };
 extern Keyboard_ Keyboard;
 
